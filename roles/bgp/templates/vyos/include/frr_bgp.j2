protocols  {
  bgp {{ routing_options['main'].asn }} {

{# Template for routing options#} 
    {% if routing_options['main'].graceful_restart == "yes" -%}
        parameters {
            graceful-restart {
                stalepath-time 300
            }
        }
    {% endif -%}

{# Template for aggregate roles#} 
    {% if routing_options is defined -%}
        {% if routing_options['main'].aggregate is defined -%}
            {% for network in routing_options['main'].aggregate -%}
            aggregate-address {{ network }} {
            }
            {% endfor -%}
        {% endif -%}
    {% endif -%}

{# Template for network statement#} 
    {% if bgp_config['main'].networks is defined -%}
        address-family {
            ipv4-unicast {
                {% for network in bgp_config['main'].networks -%}
                network {{ network }} {
                }
                {% endfor -%}
            }
        }
    {% endif -%}

{# Template for eBGP sessions#} 
    {% if bgp_neighbors_ebgp is defined -%}
        {% for peer in bgp_neighbors_ebgp -%}
            {% if bgp_neighbors_ebgp[peer].member_of == 'ebgp' and bgp_neighbors_ebgp[peer].bind_router == system_hostname -%}
                {% if bgp_neighbors_ebgp[peer].enabled is not defined or bgp_neighbors_ebgp[peer].enabled == "yes" %}
                neighbor {{bgp_neighbors_ebgp[peer].peer_ip}} {
                    address-family {
                        ipv4-unicast {
                            {% if bgp_neighbors_ebgp[peer].import is defined or bgp_neighbors_ebgp[peer].export is defined %}
                            route-map {
                            {% if bgp_neighbors_ebgp[peer].import %}import {{bgp_neighbors_ebgp[peer].import}}
                            {% endif -%}
                            {% if bgp_neighbors_ebgp[peer].export %}export {{bgp_neighbors_ebgp[peer].export}}
                            {% endif -%}
                            }
                        }
                    }
                    soft-reconfiguration {
                        inbound
                    }
                    remote-as {{ bgp_neighbors_ebgp[peer].peer_as }}
                    description "{{ bgp_neighbors_ebgp[peer].description }}"
                    {% endif -%}
                }
                {% endif -%}
            {% endif -%}
        {% endfor -%}
    {% endif -%}

{# Template for iBGP session#} 
    {% if bgp_neighbors_ibgp is defined -%}
        {% for peer in bgp_neighbors_ibgp -%}
            {% if bgp_neighbors_ibgp[peer].member_of == 'ibgp' and bgp_neighbors_ibgp[peer].bind_router == system_hostname -%}
                {% if bgp_neighbors_ibgp[peer].enabled is not defined or bgp_neighbors_ibgp[peer].enabled == "yes" %}
                neighbor {{bgp_neighbors_ibgp[peer].peer_ip}} {
                    address-family {
                        ipv4-unicast {
                            {% if bgp_neighbors_ibgp[peer].import is defined or bgp_neighbors_ibgp[peer].export is defined %}
                            route-map {
                            {% if bgp_neighbors_ibgp[peer].import %}import {{bgp_neighbors_ibgp[peer].import}}
                            {% endif -%}
                            {% if bgp_neighbors_ibgp[peer].export %}export {{bgp_neighbors_ibgp[peer].export}}
                            {% endif -%}
                            }
                        }
                    }
                    soft-reconfiguration {
                        inbound
                    }
                    remote-as {{ bgp_neighbors_ibgp[peer].peer_as }}
                    description "{{ bgp_neighbors_ibgp[peer].description }}"
                    {% endif -%}
                }

                {% endif -%}
            {% endif -%}
        {% endfor -%}
    {% endif -%}
  }

}